public static TokenModel jsonToObject(String filePath)  {
       ObjectMapper objectMapper = new ObjectMapper();
        TokenModel tokenModel = new TokenModel();
       try(InputStream inputStream = JsonToObjectConverter.class.getClassLoader()
               .getResourceAsStream(filePath)){
         if(inputStream== null) {
             throw new IllegalArgumentException("File not found in resources");
         }
           tokenModel = objectMapper.readValue(inputStream,TokenModel.class);
         return tokenModel;
       }
       catch(IOException e){
           e.printStackTrace();
       }
        return tokenModel;
    }
--------------------------------------------------------
public static <T> T jsonToObject(String filePath, Class<T> clazz) {
    ObjectMapper objectMapper = new ObjectMapper();
    try (InputStream inputStream = JsonToObjectConverter.class.getClassLoader()
            .getResourceAsStream(filePath)) {
        if (inputStream == null) {
            throw new IllegalArgumentException("File not found in resources");
        }
        return objectMapper.readValue(inputStream, clazz);
    } catch (IOException e) {
        e.printStackTrace();
        // Consider throwing a more specific exception or handling the error differently
        throw new RuntimeException("Error parsing JSON file", e);
    }
}
