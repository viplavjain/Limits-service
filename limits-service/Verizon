(i) application.yml file
spring:
  datasource:
      driver-class-name: oracle.jdbc.driver.OracleDriver
      url: jdbc:oracle:thin:@your_oracle_host:1521:your_oracle_sid
      username: your_oracle_username
      password: your_oracle_password
  data:
    cassandra:
      keyspace: your_keyspace
      contact-points: your_cassandra_host
      port: 9042
(ii) OracleEntity

@Entity
@Data
public class OracleEntity{

@Id
@GeneratedValue(strategy = GenerationType.IDENTITY)
private Long id;

private String name;

} 

@Table
@Data
public class CassandraEntity{

@Id
@GeneratedValue(strategy = GenerationType.IDENTITY)
private Long id;

private String name;

} 

----------------------------------------------------------------------

(i) GenericRepository interface

     public interface GenericRepository<T,ID>{
      
     T save(T entity);
     List<T> findBySkewId(ID id);
     Optional<T> findById(ID id);
     Iterable<T> findAll();
     void delete(T entity);
     void deleteById(ID id);
   }
(iii) Oracle Repository
 
 @Repository
 public interface OracleEntityRepository extends JpaRepository<OracleEntity,Long>, 
 GenericRepository<OracleEntity,Long> {
 
   List<T> findByDeviceId(ID id);
   List<T> findAll();
}

(iv) Cassandra Repository

 @Repository
 public interface CassandraEntityRepository extends CassandraRepository<CassandraEntity,Long>, 
 GenericRepository<CassandraEntity,Long> {
 
   List<T> findByDeviceId(ID id);
   List<T> findAll();
}
---------------------------------------------------------
@Service
(i) public class GenericService<T,ID> {

private final GenericRepository<T,ID> repository;

@Autowired
public GenericService(GenericRepository<T,ID> repository){
this.repository = repository;
}

public T save(T entity){
return repository.save(entity);
}

public Optional<T> findById(ID id){
return repository.findById(id);
}

}
------------------------------------------------------------
@Service
public class OracleService extends GenericService<OracleEntity, Long>{

@AUtowired
public OracleService(OracleEntityRepository repository)
{
  super(repository);
}
}
