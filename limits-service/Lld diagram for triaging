@startuml
title configure() Method Sequence Diagram

participant "RouteBuilder" as rb
participant "Exchange" as ex
participant "Processor" as pr
participant "invokeRule" as ir
participant "Command" as cmd
participant "OrchestrationCommand" as orchCmd
participant "ExecutorService" as es

== Initialization ==
rb -> ex : initHeaders(exchange)
rb -> orchCmd : getOrchestractionCommand(exchange)
rb -> ir : invokeRule(PRE_PROCESS)
note right: Orchestration pre-command

== Parallel Commands Execution ==
rb -> pr : Loop - while executionLoopNotCompleted
pr -> orchCmd : getCmdList()
alt CmdList is not empty
    pr -> orchCmd : getNextCommands()
    pr -> ex : set(nextCmdList)
    pr -> ex : split(nextCmdList)
    es --> cmd : parallelExecution(cmd)
    pr -> ir : invokeRule(PRE_PROCESS for command)
    pr -> cmd : executeCommand()
    pr -> ex : storeResponse
else
    pr -> ex : executionLoopNotCompleted = false
end

== Post Processing ==
alt No more commands
    pr -> ir : invokeRule(POST_PROCESS)
    pr -> ex : aggregateResponse
else More sequences
    pr -> ir : invokeRule(RESEQUENCER)
    pr -> ex : getNextSequence
end

== Command Execution ==
rb -> pr : executeCommand
pr -> cmd : checkSkipCommand
alt Command not skipped
    pr -> cmd : execute
    pr -> ex : storeResult
    pr -> ir : invokeRule(POST_PROCESS for cmd)
else
    pr -> ex : skipCommand
end

@enduml
